<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="Q9z}u}L2cNNG4vu`]w7~" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="ime$DdOk6=wXDK-w$;|3" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace maxBot {" line1="    const speakerPin = AnalogPin.P0;" line2="    const trigPin = DigitalPin.P1, echoPin = DigitalPin.P2;" line3="    const leftMotor = AnalogPin.P8, rightMotor = AnalogPin.P12;" line4="    const leftButton = DigitalPin.P16, rightButton = DigitalPin.P13;" line5="    const leftLightSensor = DigitalPin.P15, rightLightSensor = DigitalPin.P14;" line6="    let leftStrip = neopixel.create(DigitalPin.P5, 10, NeoPixelMode.RGB);" line7="    let rightStrip = neopixel.create(DigitalPin.P11, 10, NeoPixelMode.RGB);" line8="" line9="    /**" line10="     * Function to set the speed of both motors." line11="     */" line12="    //% blockID=maxbotSetWheels" line13="    //% block=&quot;max:bot set left : $leftWheel right : $rightWheel&quot;" line14="    //% leftWheel.min=-90 leftWheel.max=90 rightWheel.min=-90 rightWheel.max=90" line15="    export function setWheelSpeeds(leftWheel : number, rightWheel : number) : void {" line16="        leftWheel |= 0; " line17="        rightWheel |= 0;" line18="        pins.servoWritePin(leftMotor, 90 + leftWheel);" line19="        pins.servoWritePin(rightMotor, 90 + rightWheel);" line20="    }" line21="    " line22="    /**" line23="     * Stops the max:bot. Sets both motors to 0 speed." line24="     */" line25="    //% blockID=maxbotStop" line26="    //% block=&quot;max:bot stop&quot;" line27="    export function stop() : void {" line28="        pins.servoWritePin(leftMotor, 90);" line29="        pins.servoWritePin(rightMotor, 90);" line30="    }" line31="" line32="    /**" line33="     * Make max:bot move forward at a set speed" line34="     */" line35="    //% blockID=maxbotForwardSpeed" line36="    //% block=&quot;max:bot forward at $speed&quot;" line37="    //% speed.min=1 speed.max=90" line38="    export function forward(speed : number) : void {" line39="        speed |= 0;" line40="        pins.servoWritePin(leftMotor, 90+speed);" line41="        pins.servoWritePin(rightMotor, 90+speed);" line42="    }" line43="" line44="    /**" line45="     * Make max:bot move backward at a set speed" line46="     */" line47="    //% blockID=maxbotBackwardSpeed" line48="    //% block=&quot;max:bot reverse at $speed&quot;" line49="    //% speed.min=1 speed.max=90" line50="    export function backward(speed: number): void {" line51="        speed |= 0;" line52="        pins.servoWritePin(leftMotor, 90 - speed);" line53="        pins.servoWritePin(rightMotor, 90 - speed);" line54="    }" line55="" line56="    /**" line57="     * Make max:bot turn left at a set speed" line58="     */" line59="    //% blockID=maxbotLeftSpeed" line60="    //% block=&quot;max:bot turn left at $speed&quot;" line61="    //% speed.min=1 speed.max=90" line62="    export function turnLeft(speed : number) : void {" line63="        speed |= 0;" line64="        pins.servoWritePin(leftMotor, 90 - speed);" line65="        pins.servoWritePin(rightMotor, 90 + speed);" line66="    }" line67="" line68="    /**" line69="     * Make max:bot turn right at a set speed" line70="     */" line71="    //% blockID=maxbotRightSpeed" line72="    //% block=&quot;max:bot turn right at $speed&quot;" line73="    //% speed.min=1 speed.max=90" line74="    export function turnRight(speed: number) : void {" line75="        speed |= 0;" line76="        pins.servoWritePin(leftMotor, 90 + speed);" line77="        pins.servoWritePin(rightMotor, 90 - speed);" line78="    }" line79="" line80="    /**" line81="     * Set max:bot left wheel speed" line82="     */" line83="    //% blockID=maxbotLeftWheelSpeed" line84="    //% block=&quot;max:bot set left wheel to $speed&quot;" line85="    //% speed.min=-90 speed.max=90" line86="    export function setLeftWheelSpeed(speed:number) : void {" line87="        speed |= 0;" line88="        pins.servoWritePin(leftMotor, speed);" line89="    }" line90="    " line91="    /**" line92="     * Set max:bot right wheel speed" line93="     */" line94="    //% blockID=maxbotRightWheelSpeed" line95="    //% block=&quot;max:bot set right wheel to $speed&quot;" line96="    //% speed.min=-90 speed.max=90" line97="    export function setRightWheelSpeed(speed: number): void {" line98="        speed |= 0;" line99="        pins.servoWritePin(rightMotor, speed);" line100="    }" line101="" line102="    /**" line103="     * Get left strip on max:bot" line104="     */" line105="    //% blockID=maxbotGetLeftStrip" line106="    //% block=&quot;max:bot left strip&quot;" line107="    export function getLeftStrip() : neopixel.Strip{" line108="        return leftStrip;" line109="    }" line110="    " line111="    /**" line112="     * Get right strip on max:bot" line113="     */" line114="    //% blockID=maxbotGetRightStrip" line115="    //% block=&quot;max:bot right strip&quot;" line116="    export function getRightStrip(): neopixel.Strip {" line117="        return rightStrip;" line118="    }" line119="" line120="    /**" line121="     * Returns if the left button is pushed or not" line122="     */" line123="    //% blockID=maxbotLeftButtonPushed" line124="    //% block=&quot;max:bot is left button pushed?&quot;" line125="    export function isLeftButtonPushed () : boolean {" line126="        return pins.digitalReadPin(leftButton) == 1;" line127="    }" line128="" line129="    /**" line130="     * Returns if the right button is pushed or not" line131="     */" line132="    //% blockID=maxbotLeftButtonPushed" line133="    //% block=&quot;max:bot is right button pushed?&quot;" line134="    export function isRightButtonPushed(): boolean {" line135="        return pins.digitalReadPin(rightButton) == 1;" line136="    }" line137="" line138="    /**" line139="     * Returns if the left light sensor detects light" line140="     */" line141="    //% blockID=maxbotLeftLightSensorLight" line142="    //% block=&quot;max:bot left light sensor detects light?&quot;" line143="    export function leftLightSensorLight() : boolean {" line144="        return pins.digitalReadPin(leftLightSensor) == 0;" line145="    }" line146="" line147="    /**" line148="     * Returns if the right light sensor detects light" line149="     */" line150="    //% blockID=maxbotRightLightSensorLight" line151="    //% block=&quot;max:bot right light sensor detects light?&quot;" line152="    export function rightLightSensorLight(): boolean {" line153="        return pins.digitalReadPin(rightLightSensor) == 0;" line154="    }" line155="" line156="    /**" line157="     * Returns distance sensed by ultrasonic sensor in centimeters" line158="     */" line159="    //% blockID=maxbotUltrasonicSensor" line160="    //% block=&quot;max:bot ultrasonic sensor distance&quot;" line161="    export function ultrasonicDistance(): number {" line162="        return sonar.ping(trigPin, echoPin, PingUnit.Centimeters);" line163="    }" line164="}" numlines="165"></mutation></block></statement></block></xml>